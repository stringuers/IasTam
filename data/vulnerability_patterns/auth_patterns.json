[
  {
    "name": "Hardcoded Secret",
    "pattern": "(password|secret|key|token)\\s*=\\s*[\"'][^\"']+[\"']",
    "vulnerability_type": "authentication_issue",
    "severity": "critical",
    "description": "Hardcoded secret or password found",
    "cwe_id": "CWE-798",
    "owasp_category": "A07:2021 - Identification and Authentication Failures",
    "fix_suggestion": "Use environment variables or secure configuration",
    "confidence": 0.9
  },
  {
    "name": "Weak Password Policy",
    "pattern": "password.*length.*[0-5]|password.*min.*[0-5]",
    "vulnerability_type": "authentication_issue",
    "severity": "medium",
    "description": "Weak password length requirement",
    "cwe_id": "CWE-521",
    "owasp_category": "A07:2021 - Identification and Authentication Failures",
    "fix_suggestion": "Implement stronger password requirements (minimum 8 characters)",
    "confidence": 0.6
  },
  {
    "name": "JWT Weak Secret",
    "pattern": "jwt\\.sign.*[\"'][^\"']{1,31}[\"']",
    "vulnerability_type": "authentication_issue",
    "severity": "high",
    "description": "JWT signed with weak secret",
    "cwe_id": "CWE-326",
    "owasp_category": "A07:2021 - Identification and Authentication Failures",
    "fix_suggestion": "Use strong, random secret (at least 256 bits)",
    "confidence": 0.8
  },
  {
    "name": "JWT No Expiration",
    "pattern": "jwt\\.sign\\([^,]*,[^,]*\\)(?!.*expiresIn)",
    "vulnerability_type": "authentication_issue",
    "severity": "medium",
    "description": "JWT token without expiration",
    "cwe_id": "CWE-613",
    "owasp_category": "A07:2021 - Identification and Authentication Failures",
    "fix_suggestion": "Set appropriate expiration time for JWT tokens",
    "confidence": 0.7
  },
  {
    "name": "JWT Algorithm None",
    "pattern": "algorithm\\s*:\\s*[\"']none[\"']",
    "vulnerability_type": "authentication_issue",
    "severity": "critical",
    "description": "JWT using 'none' algorithm",
    "cwe_id": "CWE-327",
    "owasp_category": "A07:2021 - Identification and Authentication Failures",
    "fix_suggestion": "Use secure signing algorithm (RS256, HS256, etc.)",
    "confidence": 0.9
  },
  {
    "name": "No Password Hashing",
    "pattern": "password.*=.*req\\.|password.*=.*body\\.|password.*=.*params\\.",
    "vulnerability_type": "authentication_issue",
    "severity": "critical",
    "description": "Password stored without hashing",
    "cwe_id": "CWE-256",
    "owasp_category": "A07:2021 - Identification and Authentication Failures",
    "fix_suggestion": "Hash passwords using bcrypt, scrypt, or Argon2",
    "confidence": 0.8
  },
  {
    "name": "Missing Authentication Check",
    "pattern": "app\\.(get|post|put|delete).*admin|app\\.(get|post|put|delete).*sensitive",
    "vulnerability_type": "authorization_issue",
    "severity": "high",
    "description": "Sensitive endpoint without authentication",
    "cwe_id": "CWE-306",
    "owasp_category": "A01:2021 - Broken Access Control",
    "fix_suggestion": "Add authentication middleware",
    "confidence": 0.6
  },
  {
    "name": "CORS Misconfiguration",
    "pattern": "Access-Control-Allow-Origin.*\\*|origin\\s*:\\s*true",
    "vulnerability_type": "configuration_issue",
    "severity": "high",
    "description": "CORS configured to allow all origins",
    "cwe_id": "CWE-942",
    "owasp_category": "A05:2021 - Security Misconfiguration",
    "fix_suggestion": "Configure CORS with specific allowed origins",
    "confidence": 0.8
  }
]
