[
  {
    "name": "SQL Injection - String Concatenation",
    "pattern": "[\"'].*?\\+.*?[\"']|[\"'].*?\\$\\{.*?\\}.*?[\"']",
    "vulnerability_type": "sql_injection",
    "severity": "critical",
    "description": "SQL query uses string concatenation with user input",
    "cwe_id": "CWE-89",
    "owasp_category": "A03:2021 - Injection",
    "fix_suggestion": "Use parameterized queries or prepared statements",
    "confidence": 0.9
  },
  {
    "name": "SQL Injection - Template Literals",
    "pattern": "`.*?\\$\\{.*?\\}.*?`",
    "vulnerability_type": "sql_injection",
    "severity": "critical",
    "description": "SQL query uses template literals with user input",
    "cwe_id": "CWE-89",
    "owasp_category": "A03:2021 - Injection",
    "fix_suggestion": "Use parameterized queries or prepared statements",
    "confidence": 0.8
  },
  {
    "name": "SQL Injection - String Formatting",
    "pattern": "query.*\\+.*req\\.|query.*\\+.*req\\[|query.*\\+.*params\\.",
    "vulnerability_type": "sql_injection",
    "severity": "critical",
    "description": "SQL query uses string formatting with request parameters",
    "cwe_id": "CWE-89",
    "owasp_category": "A03:2021 - Injection",
    "fix_suggestion": "Use parameterized queries or prepared statements",
    "confidence": 0.85
  },
  {
    "name": "SQL Injection - Dynamic Table Name",
    "pattern": "FROM\\s+\\$\\{|SELECT\\s+\\*\\s+FROM\\s+\\+",
    "vulnerability_type": "sql_injection",
    "severity": "high",
    "description": "Dynamic table or column names in SQL query",
    "cwe_id": "CWE-89",
    "owasp_category": "A03:2021 - Injection",
    "fix_suggestion": "Use whitelist for table/column names",
    "confidence": 0.7
  }
]
