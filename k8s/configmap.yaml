apiVersion: v1
kind: ConfigMap
metadata:
  name: defensys-config
  namespace: defensys
data:
  config.json: |
    {
      "scan": {
        "max_file_size_mb": 50,
        "timeout_seconds": 300,
        "parallel_scans": 4,
        "deep_analysis": true,
        "recursive": true,
        "file_extensions": [".js", ".ts", ".jsx", ".tsx", ".py", ".java", ".php"],
        "exclude_patterns": ["node_modules", ".git", "dist", "build"]
      },
      "report": {
        "output_dir": "/app/data/scan_results/",
        "include_poc": true,
        "include_fix_suggestions": true,
        "generate_attack_chains": true,
        "export_formats": ["json", "html"]
      },
      "ml": {
        "model_path": "/app/data/models/",
        "confidence_threshold": 0.7,
        "use_gpu": false,
        "batch_size": 32
      },
      "api": {
        "host": "0.0.0.0",
        "port": 8000,
        "workers": 4,
        "cors_origins": ["*"],
        "rate_limit": 100
      },
      "logging": {
        "level": "INFO",
        "log_dir": "/app/data/logs/",
        "colored": false,
        "max_file_size": 10485760,
        "backup_count": 5
      }
    }
  nginx.conf: |
    events {
        worker_connections 1024;
    }
    
    http {
        upstream defensys_backend {
            server defensys-api-service:8000;
        }
        
        server {
            listen 80;
            server_name _;
            
            location / {
                proxy_pass http://defensys_backend;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
            }
            
            location /health {
                proxy_pass http://defensys_backend/health;
                access_log off;
            }
        }
    }
